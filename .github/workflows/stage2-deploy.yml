jobs:
  deploy-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'testing' }}
    runs-on: ubuntu-latest
    steps:
      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ✅ Add the Container Apps CLI extension
      - name: Install Azure CLI extensions
        run: |
          az extension add --name containerapp --upgrade -y
          az extension add --name log-analytics --upgrade -y || true

      - name: Compute variables
        id: vars
        shell: bash
        run: |
          IMAGE_TAG="${{ github.event.workflow_run.head_sha }}"
          RG="${{ env.RG_PREFIX }}-${{ github.run_id }}"
          ENV_NAME="aca-${{ github.run_id }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "RG=$RG"             >> "$GITHUB_OUTPUT"
          echo "ENV_NAME=$ENV_NAME" >> "$GITHUB_OUTPUT"

      - name: Create resource group
        run: az group create -n "${{ steps.vars.outputs.RG }}" -l "${{ env.LOCATION }}"

      - name: Ensure providers registered
        run: |
          az provider register --namespace Microsoft.App --wait
          az provider register --namespace Microsoft.OperationalInsights --wait

      # ✅ Create Log Analytics workspace and grab keys
      - name: Create Log Analytics workspace
        id: la
        run: |
          LA_NAME="la-${{ github.run_id }}"
          az monitor log-analytics workspace create \
            -g "${{ steps.vars.outputs.RG }}" \
            -n "$LA_NAME" \
            -l "${{ env.LOCATION }}" >/dev/null
          LA_ID=$(az monitor log-analytics workspace show -g "${{ steps.vars.outputs.RG }}" -n "$LA_NAME" --query id -o tsv)
          LA_KEY=$(az monitor log-analytics workspace get-shared-keys -g "${{ steps.vars.outputs.RG }}" -n "$LA_NAME" --query primarySharedKey -o tsv)
          echo "id=$LA_ID"  >> "$GITHUB_OUTPUT"
          echo "key=$LA_KEY" >> "$GITHUB_OUTPUT"

      - name: Create Container Apps environment (system identity)
        run: |
          az containerapp env create \
            -g "${{ steps.vars.outputs.RG }}" \
            -n "${{ steps.vars.outputs.ENV_NAME }}" \
            -l "${{ env.LOCATION }}" \
            --logs-workspace-id  "${{ steps.la.outputs.id }}" \
            --logs-workspace-key "${{ steps.la.outputs.key }}" \
            --assign-identity
